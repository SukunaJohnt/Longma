
 if game.PlaceId == 16474126979 then 
   repeat wait() until game:IsLoaded()
   wait(.5)
   while task.wait(.1) do 
   if  not game:GetService("Workspace").Portal[game.Players.LocalPlayer.Name]:FindFirstChild("DoubleDungeonPortal") then 
   local args = {
      [1] = "DoubleDungeonPortal",
      [2] = 1
  }
  
  game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("InventoryUse"):FireServer(unpack(args))
end 

 
  for i,v in pairs(game:GetService("Workspace").Portal:GetDescendants()) do 
   if v:IsA("MeshPart") and v.Name == "DoubleDungeonPortal" and v:FindFirstChild("Leader") and v.Leader.Value == game.Players.LocalPlayer.Name then 
      game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("StartPortal"):FireServer()
    end 
   end 
end

else
   game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Ready"):FireServer()
   local replayName = "t.txt"
   local startTime = tick()
local macro = readfile(replayName)
local httpService = game:GetService("HttpService")
local recordTowers = httpService:JSONDecode(macro)
local function stcf(s)
   return loadstring("return CFrame.new(" .. s .. ");")();
end

local function place(info)
   local args = {
       [1] = info.character,
       [2] = stcf(info.position),
       [3] = Vector3.zero,
       [4] = info.unitid
   }
   game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CreateUnits"):FireServer(unpack(args))
   end
   local function upgrade(info)
       local args = {
           [1] = workspace:WaitForChild("Unit"):WaitForChild("clonetatloi01"):WaitForChild(info.character)
       }
       
       game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Upgrades"):FireServer(unpack(args))
   end 
    local function sell(info)
       local player = game.Players.LocalPlayer.Name
       local unitsell = workspace:WaitForChild("Unit"):WaitForChild(player):WaitForChild(info.character)
       game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SellUnit"):FireServer(unitsell)  
    end 
   local tower = 1
   while task.wait() do 
       if not recordTowers[tower] then 
           break 
       end
       local currentTask = recordTowers[tower] 
       if (currentTask.time <= tick() - startTime) then 
            if currentTask.type == "CreateUnit" then 
           place(currentTask)
            elseif currentTask.type == "UpgradeUnit" then 
               upgrade(currentTask)
            elseif currentTask.type == "SellUnit" then 
               sell(currentTask)
            end
           recordTowers[tower] = nil
           tower = tower + 1 
       end
   end  
end 
